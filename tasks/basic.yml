---

- name: "Ensure that the necessary directories exist"
  file:
    path: "{{ atom_path }}"
    state: "directory"
    owner: "{{ atom_user }}"
    group: "{{ atom_group }}"
  with_items:
    - "{{ atom_path }}"
    - "{{ atom_path }}/log"

- name: "Cleanup cache/ directory"
  command: "rm -rf {{ atom_path }}/cache/*"

- name: "Pull new code (depth=1 for production)"
  git:
    update: "yes"
    repo: "{{ atom_repository_url }}"
    version: "{{ atom_repository_version }}"
    dest: "{{ atom_path }}"
    accept_hostkey: "yes"
    depth: "1"
  when: "atom_environment_type == 'production'"
  notify:
    - "Clear sf_cache"
    - "Reload php-fpm"
  become_user: "{{ atom_user }}"

- name: "Pull new code"
  git:
    update: "yes"
    repo: "{{ atom_repository_url }}"
    version: "{{ atom_repository_version }}"
    dest: "{{ atom_path }}"
    accept_hostkey: "yes"
  when: "atom_environment_type == 'development'"
  notify:
    - "Clear sf_cache"
    - "Reload php-fpm"
  become_user: "{{ atom_user }}"

- name: "Install configuration files"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ atom_user }}"
    group: "{{ atom_group }}"
  with_items:
    - src: "atom/config/config.php"
      dest: "{{ atom_path }}/config/config.php"
    - src: "atom/config/propel.ini"
      dest: "{{ atom_path }}/config/propel.ini"
    - src: "atom/apps/qubit/config/app.yml"
      dest: "{{ atom_path }}/apps/qubit/config/app.yml"
    - src: "atom/apps/qubit/config/factories.yml"
      dest: "{{ atom_path }}/apps/qubit/config/factories.yml"
    - src: "atom/apps/qubit/config/settings.yml"
      dest: "{{ atom_path }}/apps/qubit/config/settings.yml"
    - src: "atom/apps/qubit/config/search.yml"
      dest: "{{ atom_path }}/apps/qubit/config/search.yml"
    - src: "atom/apps/qubit/config/gearman.yml"
      dest: "{{ atom_path }}/apps/qubit/config/gearman.yml"
  notify:
    - "Clear sf_cache"
    - "Reload php-fpm"

- name: "Uploads symlink"
  file:
    state: "link"
    src: "{{ atom_uploads_symlink }}"
    path: "{{ atom_path }}/uploads"
    force: "yes"
    owner: "{{ atom_user }}"
    group: "{{ atom_group }}"
  when: "atom_uploads_symlink is defined"

- name: "Uploads directory"
  file:
    state: "directory"
    path: "{{ atom_path }}/uploads"
    owner: "{{ atom_user }}"
    group: "{{ atom_group }}"
  when: "atom_uploads_symlink is undefined"

- name: "Install sf symlink"
  file:
    state: "link"
    src: "{{ atom_path }}/vendor/symfony/data/web/sf"
    path: "{{ atom_path }}/sf"
    owner: "{{ atom_user }}"
    group: "{{ atom_group }}"
