---

# apt-key with https://deb.nodesource.com/gpgkey/nodesource.gpg.key
# produces "Failed to validate the SSL certificate" error"
# https://github.com/nodesource/ansible-nodejs-role/issues/33
- name: "Add Nodesource apt key"
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present
  when: "ansible_distribution_version is version('16.04', '<=')"

- name: "Add external repositories"
  apt_repository:
    repo: "{{ item }}"
    update_cache: "yes"
  with_items:
    - "deb https://deb.nodesource.com/node_5.x {{ ansible_distribution_release }} main"
  when: "ansible_distribution_version is version('16.04', '<=')"

- name: "Add archivematica/externals-dev PPA (ffmpeg in Ubuntu <= 14.04)"
  apt_repository:
    repo: "ppa:archivematica/externals-dev"
    update_cache: "yes"
  when: "ansible_distribution_version is version('14.04', '<=')"

- name: "Install AtoM dependencies (Ubuntu <= Xenial/16.04)"
  apt:
    pkg: "{{ item }}"
    state: "latest"
  with_items:
    - "imagemagick"       # ↓ AtoM dependencies
    - "ghostscript"       #
    - "poppler-utils"     #
    - "ffmpeg"            #
    - "git"               # ↓ Build dependencies
    - "nodejs"            #
    - "make"              #
    - "python-pip"        #
    - "python-setuptools" #
    - "openjdk-8-jre-headless" # Needed by FOP
  when: "ansible_distribution_version is version('16.04', '<=')"

- name: "Install AtoM dependencies (Ubuntu >= Bionic/18.04)"
  apt:
    pkg: "{{ item }}"
    state: "latest"
  with_items:
    - "imagemagick"       # ↓ AtoM dependencies
    - "ghostscript"       #
    - "poppler-utils"     #
    - "ffmpeg"            #
    - "git"               # ↓ Build dependencies
    - "npm"               #
    - "make"              #
    - "python-pip"        #
    - "python-setuptools" #
    - "openjdk-8-jre-headless" # Needed by FOP
  when: "ansible_distribution_version is version('18.04', '>=')"

- name: "Install Sphinx"
  pip:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - "sphinx"
    - "sphinxcontrib-httpdomain"
    - "sphinx_rtd_theme"

- name: "Install npm global dependencies (also required during the build)"
  npm:
    name: "{{ item }}"
    global: "yes"
  with_items:
    - "grunt-cli"
    - "less@<2.0.0"
