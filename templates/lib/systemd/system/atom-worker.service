[Unit]
Description=AtoM worker
After=network.target
# High interval and low restart limit to increase the possibility
# of hitting the rate limits in long running recurrent jobs.
StartLimitIntervalSec=24h
StartLimitBurst=3

[Install]
WantedBy=multi-user.target

[Service]
Type=simple
User={{ atom_user }}
Group={{ atom_group }}
{% if atom_revision_directory|bool %}
WorkingDirectory={{ atom_path }}/{{ atom_revision_directory_latest_symlink_dir }}
{% else %}
WorkingDirectory={{ atom_path }}
{% endif %}
{% if ansible_os_family == "RedHat" %}
{% if atom_worker_old_config|bool %}
ExecStart=/opt/rh/rh-php{{ php_version }}/root/bin/php -d memory_limit=-1 -d error_reporting="E_ALL" symfony tools:gearman-worker
{% else %}
ExecStart=/opt/rh/rh-php{{ php_version }}/root/bin/php -d memory_limit=-1 -d error_reporting="E_ALL" symfony jobs:worker
{% endif %}
{% else %}
{% if atom_worker_old_config|bool %}
ExecStart=/usr/bin/php{{ php_version }} -d memory_limit=-1 -d error_reporting="E_ALL" symfony tools:gearman-worker
{% else %}
ExecStart=/usr/bin/php{{ php_version }} -d memory_limit=-1 -d error_reporting="E_ALL" symfony jobs:worker
{% endif %}
{% endif %}
KillSignal=SIGTERM
Restart=on-failure
RestartSec=30

#Environment=ATOM_FOO_1=BAR
#Environment=ATOM_FOO_2=BAR
# AtoM PHP pool vars 
{% for key, value in atom_pool_php_envs.items() %}
{% if value != "" -%}
    Environment={{ key }}="{{ value }}"
{% endif %}
{% endfor %}

